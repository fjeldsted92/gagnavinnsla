from mpl_toolkits.basemap import Basemap
import numpy as np
import matplotlib.pyplot as plt
from tkinter import *
import pandas as pd
import psycopg2
import getpass
def get_dates():
    def Go():
        a=entry1.get()
        b=entry2.get()
        print(a)
        print(b)
        toplevel.destroy()

    toplevel = Toplevel()
    label1 = Label(toplevel, text='Sláðu inn dagsetningar (DD:MM:YYYY)',width=40)
    label1.pack()
    entry1=Entry(toplevel)
    entry1.pack()   
    entry2=Entry(toplevel)
    entry2.pack()

    ut=Button(toplevel, text='ok', command =Go)
    ut.pack()
def get_country():
    def Go():
        a=entry1.get()
        print(a)
        toplevel.destroy()
    toplevel = Toplevel()
    label1 = Label(toplevel, text='veldu land',width=40)
    label1.pack()
    entry1=Entry(toplevel)
    entry1.pack()
    ut=Button(toplevel, text='ok', command =Go)
    ut.pack()    

def get_terr():
    def Go():
        a=entry1.get()
        print(a)
        toplevel.destroy()
    toplevel = Toplevel()
    label1 = Label(toplevel, text='Nafn á hriðjuverkasamtökum',width=40)
    label1.pack()
    entry1=Entry(toplevel)
    entry1.pack()


    ut=Button(toplevel, text='ok', command =Go)
    ut.pack()    
def leave():   

    root.destroy()

def disconnect(conn,cursor):
    def leave_2():
        toplevel.destroy()
    cursor.close()
    conn.close()
    toplevel = Toplevel()
    
    label1 = Label(toplevel, text='Disconnected', height=0, width=30)
    label1.pack()
    ut=Button(toplevel, text='ok', command =leave_2)
    ut.pack()
def Connect():

    host = 'localhost'
    dbname = 'gavi'

    username = 'postgres'
    #pw = getpass.getpass()
    pw = 36543654
    conn_string = "host='{}' dbname='{}' user='{}' password='{}'".format(host, dbname, username, pw)

    print("Connecting to database {}.{} as {}".format(host, dbname, username))

    conn = psycopg2.connect(conn_string)

    cursor = conn.cursor()

    print("Connected!\n")
    return cursor, conn

def getstring():
    

    df = pd.read_csv('test.txt',)  
    fig = plt.figure(figsize=(20,10))
    ax = plt.axes()
    map = Basemap(projection='gall',resolution = 'l',area_thresh = 100000.0,lat_0=0, lon_0=0)
    map.drawcoastlines()
    map.drawcountries()
    map.fillcontinents(color = '#888888')
    map.drawmapboundary(fill_color='#f4f4f4')
    x,y = (map(df['longitude'].values, df['latitude'].values))

    points_with_annotation = []
    for i in range(len(x)):
        point, = map.plot(x[i], y[i], 'ro', markersize=6)

        annotation = ax.annotate("Virka",
        xy=(x[i], y[i]), xycoords='data',
        xytext=(4000000,10000000), textcoords='data',
        horizontalalignment="left",
        arrowprops=dict(arrowstyle="simple",
                        connectionstyle="arc3,rad=-0.2"),
        bbox=dict(boxstyle="round", facecolor="w", 
                  edgecolor="0.5", alpha=0.9)
        )
    # by default, disable the annotation visibility
        annotation.set_visible(False)
        points_with_annotation.append([point, annotation])


    def on_move(event):
        visibility_changed = False
        for point, annotation in points_with_annotation:
            should_be_visible = (point.contains(event)[0] == True)

            if should_be_visible != annotation.get_visible():
                visibility_changed = True
                annotation.set_visible(should_be_visible)

            if visibility_changed:        
                plt.draw()

    on_move_id = fig.canvas.mpl_connect('motion_notify_event', on_move)
    plt.show()
    return





cursor,conn = Connect()

root = Tk()
root.geometry('300x200+50+30')
root.title("")

button1= Button(root, text= 'Teikna', command= getstring).grid(row=1, column=2)
button2= Button(root, text='exit', command= leave).grid(row=8, column=2)
button3= Button(root, text='Skoða tímabil', command= get_dates).grid(row=3,column=4)
button4= Button(root, text='aftengjast', command=lambda: disconnect(cursor,conn)).grid(row=1,column=5)
button5= Button(root, text='Hriðjuverkasamtök', command=get_terr ).grid(row=3, column=5)
button6= Button(root, text= 'Land', command=get_country).grid(row=3, column =6)
root.mainloop()

